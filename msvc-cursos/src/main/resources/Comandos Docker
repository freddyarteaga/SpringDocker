--CORRER BASE DE DATOS MYSQL CON VOLUMENES PARA QUE PERSISTAN LOS DATOS
docker run -d -p 3307:3306 --name mysql8 --network spring -e MYSQL_ROOT_PASSWORD=sasa
-e MYSQL_DATABASE=msvc_usuarios -v data-mysql:/var/lib/mysql --restart=always mysql:8

--CORRER BASE DE DATOS POSTGRES CON VOLUMENES PARA QUE PERSISTAN LOS DATOS
docker run -p 5532:5432 --name postgres14 --network spring -e POSTGRES_PASSWORD=sasa
-e POSTGRES_DB=msvc_cursos -d -v data-postgres:/var/lib/postgresql/data
--restart=always postgres:14-alpine

--CONSTRUIR IMAGEN CURSOS
docker build -t cursos:latest . -f -\msvc-cursos\Dockerfile

--CONSTRUIR IMAGEN USUARIOS
 docker build -t usuarios . -f .\msvc-usuarios\Dockerfile

--CORRER IMAGEN USUARIOS CON LAS BANDERAS
docker run -d -p 8001:8001 --rm --name msvc-usuarios --network spring usuarios

--CORRER IMAGEN CURSOS CON LAS BANDERAS
docker run -d -p 8002:8002 --rm --name msvc-cursos --network spring cursos

--LISTAMOS VOLUMENES
docker volume ls

--INGRESAMOS A SH CLIENTE MYSQL
docker run -it --rm --network spring mysql:8 bash
mysql -hmysql8 -uroot -p
I--NGRESAMOS A SH CLIENTE POSTGRES
 docker run -it --rm --network spring postgres:14-alpine psql -h postgres14 -U postgres
\c msvc_cursos;
\dt;

--levantar contenedor por medio del compose recontruyendo la imagen y detach
docker compose up --build -d

docker compose down -> stop and remove
docker compose up -> start and create
docker compose stop -> para el contenedor existente
docker compose start -> arranca el contenedor existente

--crea una copia de imagen renombrada
docker compose tag curso-kubernetes-msvc-usuarios freddyarte/usuarios

--iniciamos sesi√≥n para hacer push a docker hup
docker login

--subimos la imagen
docker push freddyarte/usuarios